esphome:
  name: wespuarttest
  friendly_name: WespUartTest
  includes: 
    - bender_serial_sensor.h

esp32:
  board: wesp32
  framework:
    type: arduino


# Enable logging
logger:
  level: DEBUG
  #level: VERBOSE #makes uart stream available in esphome logstream

# Roberts HomeAssistant MQTT http://192.168.86.33/
mqtt:
  broker: '192.168.86.33'
  username: homeassistant
  password: zah9xeiwooce1ceedaing9eemeebaer8ie5Ievoo8zieyi0Ungoh8pee9Xiat7qu

globals:
  - id: uart_buffer
    type: std::string
    restore_value: no
    initial_value: '""'

# Enable Home Assistant API
api:
  encryption:
    key: "a7lR3WNPV10dEw/oUvEoOGMzost+iClOBTuzq2fM8K4="

ota:
  password: "59e1d59abf2e9d44e3f03bd671d77096"

# Ethernet port on wESP32 
ethernet:
  type: RTL8201
  mdc_pin: GPIO16
  mdio_pin: GPIO17
  clk_mode: GPIO0_IN
  phy_addr: 0

# Using UART2 pins on wESP32
uart:
  - id: uart_bus
    tx_pin: GPIO33
    rx_pin: GPIO39
    baud_rate: 115200
    rx_buffer_size: 512  # Set the buffer size to 512 bytes


sensor:

  # Bender 0
  - platform: template
    name: "Bender 0 Status"
    id: bender_0_status
    accuracy_decimals: 0
  - platform: template
    name: "Bender 0 Resistance"
    id: bender_0_resistance
    accuracy_decimals: 0

  # Bender 1
  - platform: template
    name: "Bender 1 Status"
    id: bender_1_status
    accuracy_decimals: 0
  - platform: template
    name: "Bender 1 Resistance"
    id: bender_1_resistance
    accuracy_decimals: 0

  # Bender 2
  - platform: template
    name: "Bender 2 Status"
    id: bender_2_status
    accuracy_decimals: 0
  - platform: template
    name: "Bender 2 Resistance"
    id: bender_2_resistance
    accuracy_decimals: 0
    
custom_component:
  - lambda: |-
      auto my_custom_sensor = new BenderSerialSensor();
      my_custom_sensor->set_uart_parent(id(uart_bus));
      my_custom_sensor->bender_sensors[0] = {id(bender_0_status), id(bender_0_resistance)};
      my_custom_sensor->bender_sensors[1] = {id(bender_1_status), id(bender_1_resistance)};
      my_custom_sensor->bender_sensors[2] = {id(bender_2_status), id(bender_2_resistance)};
      return {my_custom_sensor};
